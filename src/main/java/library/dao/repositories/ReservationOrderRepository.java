package library.dao.repositories;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import library.domain.BorrowingOrder;
import library.domain.ReservationOrder;

public class ReservationOrderRepository {

	Connection connection;
	private boolean tableExists;
	PreparedStatement selectById;
    PreparedStatement selectMaxId;
	
	PreparedStatement insert;
	
	public ReservationOrderRepository() {

		try {
			connection = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");
			
			insert = connection.prepareStatement(""
					+ "INSERT INTO reservationorder()"
					+ "VALUES()");
			
			selectById = connection.prepareStatement(""
					+ "SELECT * FROM reservationorder WHERE id=?");
			
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			
			while(rs.next()){
				if(rs.getString("TABLE_NAME").equalsIgnoreCase("reservationorder")){
					tableExists = true;
					break;
				}
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}
	
public void add(ReservationOrder reservationOrder){
		
		try {
			insert.setString(1, reservationOrder.getDate().toString());
			insert.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}
	
	public void createTable(){
		
		String createTableSql = "CREATE TABLE reservationorder("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY"
				+ "date DATETIME"
				+ ")";
		
		try {
			Statement createTable = connection.createStatement();
			if(!tableExists)
			createTable.executeUpdate(createTableSql);
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public ReservationOrder get(int id){
		ReservationOrder reservationOrder = null;
				
		try {
			selectById.setInt(1, id);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()){
				reservationOrder=new ReservationOrder();
				reservationOrder.setDateFrom(rs.getDate("datefrom"));
				reservationOrder.setDateTo(rs.getDate("dateto"));
				reservationOrder.setId(rs.getInt("id"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}		
				
		return reservationOrder;
		
	}
	
}
