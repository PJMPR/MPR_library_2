package library.dao.repositories;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import library.domain.Author;

public class AuthorRepository extends RepositoryBase<Author>{

	public AuthorRepository(Connection connection) {
		super(connection);
	}

	@Override
	protected String createTableSql() {
		return "CREATE TABLE author("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "name VARCHAR(20),"
				+ "surname VARCHAR(50),"
				+ "secondname VARCHAR(20)"
				+ ")";
	}
	
	@Override
	protected String getTableName() {
		return "author";
	}

	@Override
	protected String getUpdateSql() {
		return "UPDATE author SET (name, secondname, surname)=(?,?,?) WHERE id=?";
	}

	@Override
	protected String getInsertSql() {
		return "INSERT INTO author(name,secondname,surname) VALUES(?,?,?)";
	}
	
	@Override
	protected void setInsert(Author author) throws SQLException {
		insert.setString(1, author.getName());
		insert.setString(2, author.getSecondName());
		insert.setString(3, author.getSurname());
	}

	protected void setUpdate(Author author) throws SQLException {
		update.setString(1, author.getName());
		update.setString(2, author.getSecondName());
		update.setString(3, author.getSurname());
		update.setInt(4, author.getId());
	}
	
	public List<Author> getPage(int offset, int limit){
		
		List<Author> result = new ArrayList<Author>();
		try {
			selectByPage.setInt(1, offset);
			selectByPage.setInt(2, limit);
			ResultSet rs = selectByPage.executeQuery();
			while(rs.next()){
				Author a = new Author();
				a.setId(rs.getInt("id"));
				a.setName(rs.getString("name"));
				a.setSecondName(rs.getString("secondname"));
				a.setSurname(rs.getString("surname"));
				result.add(a);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return result;
	}
	
	public Author get(int id){
		Author author = null;
				
		try {
			selectById.setInt(1, id);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()){
				author=new Author();
				author.setName(rs.getString("name"));
				author.setSecondName(rs.getString("secondname"));
				author.setSurname(rs.getString("surname"));
				author.setId(rs.getInt("id"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}		
				
		return author;
		
	}
}
