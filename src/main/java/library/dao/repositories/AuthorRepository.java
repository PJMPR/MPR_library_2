package library.dao.repositories;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import library.domain.Author;

public class AuthorRepository {

	Connection connection;
	private boolean tableExists;
	
	PreparedStatement insert;
    PreparedStatement selectById;
    PreparedStatement selectMaxId;
    PreparedStatement slectByPage;
    PreparedStatement count;
  
	
	public AuthorRepository() {

		try {
			connection = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");
			
			insert = connection.prepareStatement(""
					+ "INSERT INTO author(name,secondname,surname)"
					+ "VALUES(?,?,?)");
			
			selectById = connection.prepareStatement(""
					+ "SELECT * FROM author WHERE id=?");
			
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			
			while(rs.next()){
				if(rs.getString("TABLE_NAME").equalsIgnoreCase("author")){
					tableExists = true;
					break;
				}
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}
	
	public Author get(int id){
		Author author = null;
				
		try {
			selectById.setInt(1, id);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()){
				author=new Author();
				author.setName(rs.getString("name"));
				author.setSecondName(rs.getString("secondname"));
				author.setSurname(rs.getString("surname"));
				author.setId(rs.getInt("id"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}		
				
		return author;
		
	}
	
	public void add(Author author){
		
		try {
			insert.setString(1, author.getName());
			insert.setString(2, author.getSecondName());
			insert.setString(3, author.getSurname());
			insert.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}
	
	public void createTable(){
		
		String createTableSql = "CREATE TABLE author("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "name VARCHAR(20),"
				+ "surname VARCHAR(50),"
				+ "secondname VARCHAR(20)"
				+ ")";
		
		try {
			Statement createTable = connection.createStatement();
			if(!tableExists)
				createTable.executeUpdate(createTableSql);
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
}
