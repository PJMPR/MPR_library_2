package library.dao.repositories;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import library.domain.Publisher;

public class PublisherRepository {
  
    Connection connection;
    private boolean tableExists;
   
    PreparedStatement insert;
  
    public PublisherRepository() {

        try {
            connection = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");
           
            insert = connection.prepareStatement(""
                    + "INSERT INTO publisher(name,phoneNumber,emailAdress,website)"
                    + "VALUES(?,?,?,?)");
          
            ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
          
            while(rs.next()){
                if(rs.getString("TABLE_NAME").equalsIgnoreCase("publisher")){
                    tableExists = true;
                    break;
                }
            }
          
        } catch (SQLException e) {
            e.printStackTrace();
        }

}
   
public void add(Publisher publisher){
       
        try {
            insert.setString(1, publisher.getName());
            insert.setInt(2, publisher.getPhoneNumber());
            insert.setString(3, publisher.getEmailAdress());
            insert.setString(4, publisher.getWebsite());
            insert.executeUpdate();
           
        } catch (SQLException e) {
            e.printStackTrace();
        }
       
    }

public void createTable(){
  
    String createTableSql = "CREATE TABLE publisher("
            + "id bigint GENERATED BY DEFAULT AS IDENTITY,"
            + "name VARCHAR(20),"
            + "emailAdress VARCHAR(50),"
            + "website VARCHAR(40),"
            + "phoneNumber INT"
            + ")";
  

    try {
        Statement createTable = connection.createStatement();
        if(!tableExists)
        createTable.executeUpdate(createTableSql);
      
    } catch (SQLException e) {
        e.printStackTrace();
    }
}

}