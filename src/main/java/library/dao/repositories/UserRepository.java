package library.dao.repositories;


import library.domain.User;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class UserRepository extends RepositoryBase<User>{

    
    

    	public UserRepository(Connection connection) {
    		super(connection);
    	}
    	
    	@Override
		protected String createTableSql() {
			return "CREATE TABLE user("
			        +"id bigint GENERATED BY DEFAULT AS IDENTITY,"
			        +"login VARCHAR(20) NOT NULL,"
			        +"password VARCHAR(20) NOT NULL,"
			        +"status bit NOT NULL"
			        +")";
		}

    	@Override
    	protected String getTableName() {
    		return "user";
    	}

    	@Override
    	protected String getUpdateSql() {
    		return "UPDATE user SET (login,password,status)=(?,?,?) WHERE id=?";
    	}

    	@Override
    	protected String getInsertSql() {
    		return "INSERT INTO user(login,password,status) VALUES(?,?,?)";
    	}
    	
    	@Override
    	protected void setInsert(User user) throws SQLException {
    		insert.setString(1, user.getLogin());
    		insert.setString(2, user.getPassword());
    		insert.setBoolean(3, user.isStatus());
    
    	}
    	
    	protected void setUpdate(User user) throws SQLException {
    		update.setString(1, user.getLogin());
    		update.setString(2, user.getPassword());
    		update.setBoolean(3, user.isStatus());
    		update.setInt(4, user.getId());
    	}

    public List<User> getPage(int offset, int limit){
		
		List<User> result = new ArrayList<User>();
		try {
			selectByPage.setInt(1, offset);
			selectByPage.setInt(2, limit);
			ResultSet rs = selectByPage.executeQuery();
			while(rs.next()){
				User a = new User();
				a.setId(rs.getInt("id"));
				a.setLogin(rs.getString("login"));
				a.setPassword(rs.getString("password"));
				a.setStatus(rs.getBoolean("status"));
				result.add(a);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return result;
	}
    
    public User get(int id){
		User user = null;
				
		try {
			selectById.setInt(1, id);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()){
				user = new User();
				user.setLogin(rs.getString("login"));
				user.setPassword(rs.getString("password"));
				user.setStatus(rs.getBoolean("status"));
				user.setId(rs.getInt("id"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}		
				
		return user;
		
	}

}