package library.dao.repositories.impl;

import java.sql.Connection;
import java.sql.SQLException;


import library.dao.mappers.IMapper;
import library.domain.ReservationOrder;

public class ReservationOrderRepository extends RepositoryBase<ReservationOrder>{

	Connection connection;	
	
	public ReservationOrderRepository(Connection connection, IMapper<ReservationOrder> mapper) {
		super(connection, mapper);
	}
	
	@Override
	protected String createTableSql(){
		return "CREATE TABLE reservationorder("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "userid INT,"
				+ "date DATETIME)";
	}
	
	@Override
	protected String getTableName() {
		return "reservationorder";
	}

	@Override
	protected String getUpdateSql() {
		return "UPDATE reservationorder SET (userid, date)=(?,?) WHERE id=?";
	}

	@Override
	protected String getInsertSql() {
		return "INSERT INTO reservationorder(userid, date) VALUES(?,?)";
	}
	
	@Override
	protected void setInsert(ReservationOrder reservationOrder) throws SQLException {
		insert.setInt(1, reservationOrder.getUserId());
	    insert.setDate(2, reservationOrder.getDate());
	}

	@Override
	protected void setUpdate(ReservationOrder reservationOrder) throws SQLException {
		update.setInt(1, reservationOrder.getUserId());
	    update.setDate(2, reservationOrder.getDate());
		update.setInt(3, reservationOrder.getId());
	}
}
	

