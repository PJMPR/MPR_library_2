package library.dao.repositories;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import library.domain.BookInformation;

public class BookInformationRepository {
	
Connection connection;
private boolean tableExists;

PreparedStatement insert;
PreparedStatement selectById;

	public BookInformationRepository() {

		try {
			connection = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");

			insert = connection.prepareStatement(""
					+ "INSERT INTO bookInformation(title)"
					+ "VALUES(?)"); 
			
			selectById = connection.prepareStatement(""
					+ "SELECT * FROM bookInformation WHERE id=?");
			
			ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
			
			while(rs.next()){
				if(rs.getString("TABLE_NAME").equalsIgnoreCase("bookInformation")){
					tableExists = true;
					break;
				}
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}
	
	public BookInformation get(int id){
		BookInformation bookInformation = null;
				
		try {
			selectById.setInt(1, id);
			ResultSet rs = selectById.executeQuery();
			while(rs.next()){
				bookInformation=new BookInformation();
				bookInformation.setTitle(rs.getString("title"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}		
				
		return bookInformation;
		
	}
	
public void add(BookInformation bookInformation){
	
		
		
		try {
			insert.setString(1, bookInformation.getTitle());
			insert.executeUpdate();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
	}
	
	public void createTable(){
		
		String createTableSql = "CREATE TABLE bookInformation("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "title VARCHAR(20)"
				+ ")";
		
		try {
			Statement createTable = connection.createStatement();
			if(!tableExists)
				createTable.executeUpdate(createTableSql);
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	

}
